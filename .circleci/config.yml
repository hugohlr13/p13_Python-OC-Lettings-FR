# This config was automatically generated from your source code
# Stacks detected: deps:python:.,file:manage.py:.
version: 2.1
orbs:
  python: circleci/python@2
jobs:
  test-python:
    # Install dependencies and run tests
    docker:
      - image: cimg/python:3.8-node
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Install dependencies
          command: |
            python -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt              
      - run:
          name: Run tests
          command: |
            source .venv/bin/activate
            pytest

  containerize_django:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Prepare environment variables
          command: |
            echo 'export COMMIT_SHA=$(git rev-parse --short HEAD)' >> $BASH_ENV
            echo 'export SECRET_KEY=supersecret' >> $BASH_ENV  # Assurez-vous de sécuriser votre clé secrète !
            source $BASH_ENV
      - run:
          name: Build Docker image
          command: |
            docker-compose build web
      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Push Docker image to DockerHub
          command: |
            docker-compose push web 

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install Heroku CLI
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh        
      - setup_remote_docker               
      - run:
          name: Login to Heroku Container Registry
          command: |
            echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
      - run:
          name: Extract commit message
          command: |
            COMMIT_MESSAGE=$(git log -1 --pretty=%B)
            echo "export COMMIT_MESSAGE='${COMMIT_MESSAGE}'" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Debug COMMIT_MESSAGE and HEROKU_APP_NAME
          command: |
            echo "Commit message is ${COMMIT_MESSAGE}"
            echo "Heroku app name is ${HEROKU_APP_NAME}"                        
      - run:
          name: Pull and tag the Django image from Docker Hub
          command: |
            docker pull $DOCKERHUB_USERNAME/oc_lettings_site:"${COMMIT_MESSAGE}"
            docker tag $DOCKERHUB_USERNAME/oc_lettings_site:"${COMMIT_MESSAGE}" registry.heroku.com/$HEROKU_APP_NAME/web
      - run:
          name: Push the images to Heroku Container Registry
          command: |
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
      - run:
          name: Release the image to deploy the app
          command: |
            heroku container:release web --app $HEROKU_APP_NAME                        

workflows:
  test-and-build-and-deploy:
    jobs:
      - test-python
      - containerize_django:
          requires:
            - test-python
          filters:
            branches:
              only: master 
      - deploy:
          requires:
            - containerize_django
          filters:
            branches:
              only: master